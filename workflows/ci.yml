name: 'Continuous Integration'

on:
  push:
    branches:
      - 'feature/**'
      - 'master'
      - 'develop'
  pull_request:
    branches: [ master, develop ]

jobs:

  test-model:
    runs-on: self-hosted

    steps:
      # Clona el repositorio
      - uses: actions/checkout@v2

      # Configura Python 3.10 (puedes usar 3.9 si lo prefieres)
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      # Cachear las dependencias de pip
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Instalar las dependencias usando pip
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          make install

      # Ejecutar las pruebas del modelo
      - name: Run model tests
        run: make model-test

  test-api:
    runs-on: self-hosted

    steps:
      # Clona el repositorio
      - uses: actions/checkout@v2

      # Configura Python 3.10 (puedes usar 3.9 si lo prefieres)
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      # Cachear las dependencias de pip
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Instalar las dependencias usando pip
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          make install

      # Ejecutar las pruebas de la API
      - name: Run API tests
        run: make api-test

  lint:
    runs-on: self-hosted

    steps:
      # Clona el repositorio
      - uses: actions/checkout@v2

      # Configura Python 3.10 (puedes usar 3.9 si lo prefieres)
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      # Instalar flake8 para análisis de código
      - name: Install flake8
        run: |
          python -m pip install flake8

      # Ejecutar flake8 para chequeo de código
      - name: Run linter
        run: flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics